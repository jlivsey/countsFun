% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllFunctions.R
\name{ParticleFilter_Res_ARMA}
\alias{ParticleFilter_Res_ARMA}
\title{Particle Filter likelihood function with Resampling for ARMA Models}
\usage{
ParticleFilter_Res_ARMA(theta, mod)
}
\arguments{
\item{theta}{Numeric vector. Parameter vector for the model.}

\item{mod}{List. A list containing all model specifications, including:
\describe{
\item{DependentVar}{Numeric. The dependent time series variable to be modeled.}
\item{Task}{Character. The task requested by the user (e.g., Evaluation, Optimization, Synthesis, etc.).}
\item{ParticleNumber}{Integer. Number of particles to use.}
\item{Regressor}{Optional independent variable(s).}
\item{CountDist}{Character string. Specifies the count marginal distribution.}
}}
}
\value{
Numeric. Approximate log-likelihood of the model.
}
\description{
Uses particle filtering with resampling to approximate the likelihood of
a specified count time series model with an underlying ARMA dependence structure.
}
\examples{
# Example: Compute the log-likelihood of a Poisson-ARMA(1,0) model
CountDist      <- "Poisson"
n              <- 100
ARMAModel      <- c(1,0)
MargParm       <- 3
ARParm         <- 0.5
MAParm         <- NULL
initialParam   <- c(3, ARParm, MAParm)

# Simulate data
set.seed(2)
DependentVar <- sim_lgc(n, CountDist, MargParm, ARParm, MAParm)

# Build model specification
mod <- ModelScheme(
  DependentVar   = DependentVar,
  CountDist      = CountDist,
  ARMAModel      = ARMAModel,
  initialParam   = initialParam
)

# Compute log-likelihood at a given parameter point
ll <- ParticleFilter_Res_ARMA(initialParam, mod)
ll
}
